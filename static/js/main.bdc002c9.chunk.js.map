{"version":3,"sources":["components/Todo.js","components/Todolist.js","components/Form.js","App.js","reportWebVitals.js","index.js"],"names":["Todo","props","text","td","setTodo","todo","className","completed","onClick","map","item","id","console","log","filter","Todolist","filterTodo","setFilterTodo","Form","setInputText","inputText","setStatus","type","onChange","e","target","value","preventDefault","Math","random","name","App","useState","status","useEffect","filterHal","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bdc002c9.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nconst Todo = props => {\r\n    const {text, td, setTodo ,todo } = props\r\n    const deleteTodo = () =>{\r\n        setTodo(todo.filter((item)=>{\r\n            return item.id !== td.id\r\n        }))\r\n    }\r\n    const doneTodo = () =>{\r\n        setTodo(todo.map((item)=>{\r\n            if(item.id  === td.id ){\r\n            console.log(item)\r\n            return {...item , completed  :  !item.completed}\r\n            }\r\n            else{\r\n                return item;\r\n            }\r\n        }))\r\n    }\r\n    return (\r\n        <div className = 'todo'>\r\n    <li className= {` todo-item ${td.completed ? \"completed\" : ''} `} >{text}</li>\r\n            <button  className= \"complete-btn\" onClick = {doneTodo}> <i className= \"fas fa-check\"> </i></button>\r\n            <button className = 'trash-btn' onClick = {deleteTodo}><i  className = \"fas fa-trash\"> </i></button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Todo\r\n","import React  from 'react'\r\nimport Todo from \"./Todo\"\r\n\r\nconst Todolist = props => {\r\n    const {todo ,setTodo ,setFilterTodo ,filterTodo} = props \r\n    console.log(todo)\r\n    return (\r\n       <div className=\"todo-container\">\r\n         <ul className=\"todo-list\">\r\n          {\r\n        filterTodo.map((td) =>{\r\n               \r\n            return <Todo  text= {td.text} key={td.id} td = {td} todo = {todo} setTodo = {setTodo}/>\r\n         })\r\n        }\r\n\r\n         </ul>\r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Todolist\r\n","import React from 'react'\r\n\r\nimport Todolist from './Todolist'\r\n\r\nconst Form = (props) => {\r\n  const {setInputText,setTodo,todo, inputText ,setStatus} = props\r\n    const inputTextHandle = (e) =>{\r\n        setInputText(e.target.value);\r\n    }\r\n    const submitHandle = (e)=>{       \r\n        e.preventDefault();\r\n        setTodo([...todo, {text : inputText , completed : false , id : Math.random()}])\r\n        setInputText('')\r\n    }\r\n   const filterH  = (e)=>{\r\n       setStatus(e.target.value)\r\n   }\r\n    return (\r\n        <form  >\r\n        <input type=\"text\" onChange={inputTextHandle} className=\"todo-input\" value = {inputText}/>\r\n        <button className=\"todo-button\" type=\"submit\" onClick = {submitHandle}>\r\n          <i className=\"fas fa-plus-square\"> </i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select name=\"todos\" className=\"filter-todo\" onChange = {filterH}>\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\n\r\nexport default Form\r\n","import React ,{useState ,useEffect} from 'react'\n\nimport './App.css';\nimport Form from './components/Form'\nimport Todolist from './components/Todolist'\nfunction App() {\n  const [inputText,setInputText] = useState('');\n  const [todo, setTodo] = useState([])\n  const [status, setStatus] = useState('all');\n  const [filterTodo , setFilterTodo] = useState([]);\n\n\n  useEffect(() => {\n    \n    filterHal();\n  },[todo,status]);\n  \n   const filterHal = ()=>{\n     switch(status) {\n       case 'completed' :\n         setFilterTodo(todo.filter((item)=> item.completed === true))\n         break;\n         case 'uncompleted' :\n         setFilterTodo(todo.filter((item)=> item.completed === false))\n         break;\n         default : setFilterTodo(todo);\n         break;\n     }\n     }\n   \n\n  return (\n    <div className=\"App\">\n    <header>\n      <h1> Todo List</h1>\n    </header>\n    <Form todo= {todo} setTodo = {setTodo} inputText = {inputText} setInputText ={setInputText} setFilterTodo = {setFilterTodo}  setStatus = {setStatus}/>\n    <Todolist   filterTodo= {filterTodo} todo= {todo} setTodo = {setTodo}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}